syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "user/rpc_create_user.proto";
import "user/rpc_delete_user_by_id.proto";
import "user/rpc_delete_user_by_value.proto";
import "user/rpc_get_user_by_id.proto";
import "user/rpc_get_user_by_value.proto";
import "user/rpc_list_users.proto";
import "user/rpc_update_user.proto";

option go_package = "github.com/Streamfair/streamfair_user_svc/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
	  title: "Streamfair User Service";
	  version: "1.0";
	  contact: {
		name: "Streamfair";
		url: "https://github.com/Streamfair";
		email: "nelix@posteo.de";
	  };
	};
};

service UserService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/streamfair/v1/create_user"
            body: "*"
        };
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "add description here",
			summary: "add summary here",
		};
    }

    rpc DeleteUserById(DeleteUserByIdRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/streamfair/v1/delete_user_by_id/{id}"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "add description here",
			summary: "add summary here",
		};
    }

    rpc DeleteUserByValue(DeleteUserByValueRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/streamfair/v1/delete_user_by_value/{username}"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "add description here",
			summary: "add summary here",
		};
    }

    rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse) {
        option (google.api.http) = {
            get: "/streamfair/v1/get_user_by_id/{id}"
        };
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "add description here",
			summary: "add summary here",
		};
    }

    rpc GetUserByValue(GetUserByValueRequest) returns (GetUserByValueResponse) {
        option (google.api.http) = {
            get: "/streamfair/v1/get_user_by_value/{username}"
        };
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "add description here",
			summary: "add summary here",
		};
    }

    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
        option (google.api.http) = {
            post: "/streamfair/v1/list_users"
        };
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "add description here",
			summary: "add summary here",
		};
    }

    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
            patch: "/streamfair/v1/update_user/{id}"
            body: "*"
        };
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "add description here",
			summary: "add summary here",
		};
    }
}